class TestUnaryAndBinaryOperations extends EntryPoint is
	var exit_code : Integer := 0

    method assert(cond : Boolean) : void is
        if cond.not() then
            this.exit_code := 1
        end
    end

    method main(stdin: StdIn, stdout: StdOut, stderr: StdOut, args: Array[Array[Integer]]) : Integer is
		var a : Integer := 5
		var b : Integer := 3
		var c : Real := 2.5
		var d : Real := 1.5


		// Test unary operations
		var resultInt : Integer := a.unaryMinus()
		var resultReal : Real := c.unaryMinus()
		var boolResult : Boolean := true.not()
		this.assert(resultInt.equal(-5))
		this.assert(resultReal.equal(2.5))
		this.assert(boolResult.toInteger().equal(0))


		// Test binary operations
		resultInt := a.plus(b)
		resultReal := c.plus(d)
		this.assert(resultInt.equal(8))
		this.assert(resultReal.equal(4.0))

		resultInt := a.minus(b)
		resultReal := c.minus(d)
		this.assert(resultInt.equal(2))
		this.assert(resultReal.equal(1.0))

		resultInt := a.mult(b)
		resultReal := c.mult(d)
		this.assert(resultInt.equal(15))
		this.assert(resultReal.equal(3.75))

		resultInt := a.div(b) // Expected: 1 (since it's integer division)
		resultReal := c.div(d) // Expected: 1.666...
		this.assert(resultInt.equal(1))

		boolResult := true.or(false)
		this.assert(boolResult.toInteger().equal(1))
		return this.exit_code
    end
end
